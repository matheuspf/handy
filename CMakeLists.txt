cmake_minimum_required(VERSION 3.15)

project(handy LANGUAGES CXX)

set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)

include(GNUInstallDirs)
include(CMakePackageConfigHelpers)

include(get_project_version)
include(handle_dependency)

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release CACHE STRING "" FORCE)
endif()

if(NOT HANDY_INCLUDE_INSTALL_DIR)
    if(INCLUDE_INSTALL_DIR)
        set(HANDY_INCLUDE_INSTALL_DIR ${INCLUDE_INSTALL_DIR})
    else()
        set(HANDY_INCLUDE_INSTALL_DIR ${CMAKE_INSTALL_INCLUDEDIR})
    endif()
endif()


add_library(handy INTERFACE)
add_library(handy::handy ALIAS handy)

target_compile_features(handy INTERFACE cxx_std_17)

target_include_directories(handy INTERFACE
    $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:${HANDY_INCLUDE_INSTALL_DIR}>
)

install(
    DIRECTORY ${PROJECT_SOURCE_DIR}/include/handy/
    DESTINATION ${HANDY_INCLUDE_INSTALL_DIR}/handy
)

getProjectVersion(handy ${CMAKE_CURRENT_SOURCE_DIR}/include/handy/Helpers/Config.h)

write_basic_package_version_file(
    ${CMAKE_CURRENT_BINARY_DIR}/handy-config-version.cmake
    VERSION ${handy_full_version}
    COMPATIBILITY SameMajorVersion
)

install(TARGETS handy 
    EXPORT handy-targets
)
install(EXPORT handy-targets
    NAMESPACE handy::
    DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/handy
)

install(FILES
    ${CMAKE_CURRENT_SOURCE_DIR}/cmake/handy-config.cmake
    ${CMAKE_CURRENT_BINARY_DIR}/handy-config-version.cmake
    DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/handy
)

option(HANDY_BUILD_TESTS "If the unit test will be generated by cmake" OFF)
option(HANDY_BUILD_EXAMPLES "If the examples will be generated by cmake" OFF)
option(HANDY_BUILD_DOCS "If the docs will be generated by cmake" OFF)

if(${HANDY_BUILD_TESTS})
    add_subdirectory(tests)
endif()

if(${HANDY_BUILD_EXAMPLES})
    add_subdirectory(examples)
endif()

if(${HANDY_BUILD_DOCS})
    add_subdirectory(doc)
endif()
